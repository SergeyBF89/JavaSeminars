Task1: https://leetcode.com/problems/reverse-linked-list/

Учитывая заголовок односвязного списка, переверните список и верните перевернутый список. (решили в leetcode)

Task2: Построить однонаправленный список целых чисел. Найти сумму четных элементов списка.

Task3: Заменить некратные 3-м элементы списка, суммой нечетных элементов.

Task4: Построить однонаправленный список целых чисел. Удалить отрицательные элементы списка.

Task5: https://leetcode.com/problems/simplify-path/

Если задана строка path, представляющая собой абсолютный путь (начинающийся с косой черты '/') к файлу или каталогу в
файловой системе в стиле Unix, преобразуйте ее в упрощенный канонический путь .

В файловой системе в стиле Unix точка '.'относится к текущему каталогу,
двойная точка '..'относится к каталогу на более высокий уровень, а любые несколько последовательных косых черт
(например, '//') рассматриваются как одна косая черта '/'.
Для этой проблемы любой другой формат точек, например, '...'рассматривается как имя файла/каталога.

Канонический путь должен иметь следующий формат:

Путь начинается с одной косой черты '/'.
Любые два каталога разделяются косой чертой '/'.
Путь не заканчивается трейлингом '/'.
Путь содержит только каталоги на пути от корневого каталога к целевому файлу или каталогу
(т. е. без точки '.'или двойной точки '..').
Вернуть упрощенный канонический путь .

 Пример 1:

Ввод: path = "/home/"
 Вывод: "/home"
 Объяснение: Обратите внимание, что после последнего имени каталога нет косой черты.
Пример 2:

Ввод: path = "/../"
 Вывод: "/"
 Объяснение: Переход на один уровень вверх из корневого каталога невозможен, так как корневой уровень — это самый высокий уровень, на который вы можете перейти.
Пример 3:

Ввод: path = "/home//foo/"
 Вывод: "/home/foo"
 Объяснение: В каноническом пути несколько последовательных косых черт заменяются одной.